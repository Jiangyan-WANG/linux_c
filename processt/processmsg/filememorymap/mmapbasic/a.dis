
a.out：     文件格式 elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x41b>
 248:	78 38                	js     282 <_init-0x40e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 e6                	add    %ah,%dh
 285:	99                   	cltd   
 286:	be 7b 9a 51 5c       	mov    $0x5c519a7b,%esi
 28b:	87 1a                	xchg   %ebx,(%rdx)
 28d:	3a 1f                	cmp    (%rdi),%bl
 28f:	20 ba 6f da 30 88    	and    %bh,-0x77cf2591(%rdx)
 295:	40 72 a9             	rex jb 241 <_init-0x44f>

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	72 00                	jb     2d2 <_init-0x3be>
 2d2:	00 00                	add    %al,(%rax)
 2d4:	20 00                	and    %al,(%rax)
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	17                   	(bad)  
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 21                	add    %ah,(%rcx)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 49 00             	add    %cl,0x0(%rcx)
 31a:	00 00                	add    %al,(%rax)
 31c:	12 00                	adc    (%rax),%al
	...
 32e:	00 00                	add    %al,(%rax)
 330:	8e 00                	mov    (%rax),%es
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	26 00 00             	add    %al,%es:(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 2d 00 00 00 12    	add    %ch,0x12000000(%rip)        # 12000365 <_end+0x11dff34d>
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 10                	add    %dl,(%rax)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 9d 00 00 00 20    	add    %bl,0x20000000(%rbp)
	...
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 34 00             	add    %dh,(%rax,%rax,1)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	0b 00                	or     (%rax),%eax
 3c2:	00 00                	add    %al,(%rax)
 3c4:	12 00                	adc    (%rax),%al
	...
 3d6:	00 00                	add    %al,(%rax)
 3d8:	3a 00                	cmp    (%rax),%al
 3da:	00 00                	add    %al,(%rax)
 3dc:	22 00                	and    (%rax),%al
	...
 3ee:	00 00                	add    %al,(%rax)
 3f0:	1c 00                	sbb    $0x0,%al
 3f2:	00 00                	add    %al,(%rax)
 3f4:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000408 <.dynstr>:
 408:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 40c:	63 2e                	movslq (%rsi),%ebp
 40e:	73 6f                	jae    47f <_init-0x211>
 410:	2e 36 00 77 61       	cs add %dh,%ss:0x61(%rdi)
 415:	69 74 00 70 65 72 72 	imul   $0x6f727265,0x70(%rax,%rax,1),%esi
 41c:	6f 
 41d:	72 00                	jb     41f <_init-0x271>
 41f:	70 75                	jo     496 <_init-0x1fa>
 421:	74 73                	je     496 <_init-0x1fa>
 423:	00 66 6f             	add    %ah,0x6f(%rsi)
 426:	72 6b                	jb     493 <_init-0x1fd>
 428:	00 6d 6d             	add    %ch,0x6d(%rbp)
 42b:	61                   	(bad)  
 42c:	70 00                	jo     42e <_init-0x262>
 42e:	6d                   	insl   (%dx),%es:(%rdi)
 42f:	65 6d                	gs insl (%dx),%es:(%rdi)
 431:	63 70 79             	movslq 0x79(%rax),%esi
 434:	00 6d 75             	add    %ch,0x75(%rbp)
 437:	6e                   	outsb  %ds:(%rsi),(%dx)
 438:	6d                   	insl   (%dx),%es:(%rdi)
 439:	61                   	(bad)  
 43a:	70 00                	jo     43c <_init-0x254>
 43c:	73 6c                	jae    4aa <_init-0x1e6>
 43e:	65 65 70 00          	gs gs jo 442 <_init-0x24e>
 442:	5f                   	pop    %rdi
 443:	5f                   	pop    %rdi
 444:	63 78 61             	movslq 0x61(%rax),%edi
 447:	5f                   	pop    %rdi
 448:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 44e:	7a 65                	jp     4b5 <_init-0x1db>
 450:	00 5f 5f             	add    %bl,0x5f(%rdi)
 453:	6c                   	insb   (%dx),%es:(%rdi)
 454:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 45b:	72 74                	jb     4d1 <_init-0x1bf>
 45d:	5f                   	pop    %rdi
 45e:	6d                   	insl   (%dx),%es:(%rdi)
 45f:	61                   	(bad)  
 460:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 467:	43 5f                	rex.XB pop %r15
 469:	32 2e                	xor    (%rsi),%ch
 46b:	31 34 00             	xor    %esi,(%rax,%rax,1)
 46e:	47                   	rex.RXB
 46f:	4c                   	rex.WR
 470:	49                   	rex.WB
 471:	42                   	rex.X
 472:	43 5f                	rex.XB pop %r15
 474:	32 2e                	xor    (%rsi),%ch
 476:	32 2e                	xor    (%rsi),%ch
 478:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 47d:	4d 5f                	rex.WRB pop %r15
 47f:	64 65 72 65          	fs gs jb 4e8 <_init-0x1a8>
 483:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 48a:	4d 
 48b:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 48d:	6f                   	outsl  %ds:(%rsi),(%dx)
 48e:	6e                   	outsb  %ds:(%rsi),(%dx)
 48f:	65 54                	gs push %rsp
 491:	61                   	(bad)  
 492:	62                   	(bad)  
 493:	6c                   	insb   (%dx),%es:(%rdi)
 494:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 498:	67 6d                	insl   (%dx),%es:(%edi)
 49a:	6f                   	outsl  %ds:(%rsi),(%dx)
 49b:	6e                   	outsb  %ds:(%rsi),(%dx)
 49c:	5f                   	pop    %rdi
 49d:	73 74                	jae    513 <_init-0x17d>
 49f:	61                   	(bad)  
 4a0:	72 74                	jb     516 <_init-0x17a>
 4a2:	5f                   	pop    %rdi
 4a3:	5f                   	pop    %rdi
 4a4:	00 5f 49             	add    %bl,0x49(%rdi)
 4a7:	54                   	push   %rsp
 4a8:	4d 5f                	rex.WRB pop %r15
 4aa:	72 65                	jb     511 <_init-0x17f>
 4ac:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4b3:	4d 
 4b4:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4b6:	6f                   	outsl  %ds:(%rsi),(%dx)
 4b7:	6e                   	outsb  %ds:(%rsi),(%dx)
 4b8:	65 54                	gs push %rsp
 4ba:	61                   	(bad)  
 4bb:	62                   	.byte 0x62
 4bc:	6c                   	insb   (%dx),%es:(%rdi)
 4bd:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000004c0 <.gnu.version>:
 4c0:	00 00                	add    %al,(%rax)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	02 00                	add    (%rax),%al
 4c6:	02 00                	add    (%rax),%al
 4c8:	02 00                	add    (%rax),%al
 4ca:	00 00                	add    %al,(%rax)
 4cc:	03 00                	add    (%rax),%eax
 4ce:	02 00                	add    (%rax),%al
 4d0:	02 00                	add    (%rax),%al
 4d2:	00 00                	add    %al,(%rax)
 4d4:	02 00                	add    (%rax),%al
 4d6:	02 00                	add    (%rax),%al
 4d8:	02 00                	add    (%rax),%al
 4da:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000000004e0 <.gnu.version_r>:
 4e0:	01 00                	add    %eax,(%rax)
 4e2:	02 00                	add    (%rax),%al
 4e4:	01 00                	add    %eax,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	10 00                	adc    %al,(%rax)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	94                   	xchg   %eax,%esp
 4f1:	91                   	xchg   %eax,%ecx
 4f2:	96                   	xchg   %eax,%esi
 4f3:	06                   	(bad)  
 4f4:	00 00                	add    %al,(%rax)
 4f6:	03 00                	add    (%rax),%eax
 4f8:	5b                   	pop    %rbx
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 10                	add    %dl,(%rax)
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 75 1a             	add    %dh,0x1a(%rbp)
 502:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 508:	66 00 00             	data16 add %al,(%rax)
 50b:	00 00                	add    %al,(%rax)
 50d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000510 <.rela.dyn>:
 510:	80 0d 20 00 00 00 00 	orb    $0x0,0x20(%rip)        # 537 <_init-0x159>
 517:	00 08                	add    %cl,(%rax)
 519:	00 00                	add    %al,(%rax)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 50 08             	add    %dl,0x8(%rax)
 522:	00 00                	add    %al,(%rax)
 524:	00 00                	add    %al,(%rax)
 526:	00 00                	add    %al,(%rax)
 528:	88 0d 20 00 00 00    	mov    %cl,0x20(%rip)        # 54e <_init-0x142>
 52e:	00 00                	add    %al,(%rax)
 530:	08 00                	or     %al,(%rax)
 532:	00 00                	add    %al,(%rax)
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	10 08                	adc    %cl,(%rax)
 53a:	00 00                	add    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	08 10                	or     %dl,(%rax)
 542:	20 00                	and    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	08 00                	or     %al,(%rax)
 54a:	00 00                	add    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	08 10                	or     %dl,(%rax)
 552:	20 00                	and    %al,(%rax)
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	d8 0f                	fmuls  (%rdi)
 55a:	20 00                	and    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	06                   	(bad)  
 561:	00 00                	add    %al,(%rax)
 563:	00 01                	add    %al,(%rcx)
	...
 56d:	00 00                	add    %al,(%rax)
 56f:	00 e0                	add    %ah,%al
 571:	0f 20 00             	mov    %cr0,%rax
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	06                   	(bad)  
 579:	00 00                	add    %al,(%rax)
 57b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 586:	00 00                	add    %al,(%rax)
 588:	e8 0f 20 00 00       	callq  259c <__FRAME_END__+0x1a90>
 58d:	00 00                	add    %al,(%rax)
 58f:	00 06                	add    %al,(%rsi)
 591:	00 00                	add    %al,(%rax)
 593:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 599 <_init-0xf7>
 599:	00 00                	add    %al,(%rax)
 59b:	00 00                	add    %al,(%rax)
 59d:	00 00                	add    %al,(%rax)
 59f:	00 f0                	add    %dh,%al
 5a1:	0f 20 00             	mov    %cr0,%rax
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	06                   	(bad)  
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 09                	add    %cl,(%rcx)
	...
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 f8                	add    %bh,%al
 5b9:	0f 20 00             	mov    %cr0,%rax
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	06                   	(bad)  
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000000005d0 <.rela.plt>:
 5d0:	98                   	cwtl   
 5d1:	0f 20 00             	mov    %cr0,%rax
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	07                   	(bad)  
 5d9:	00 00                	add    %al,(%rax)
 5db:	00 02                	add    %al,(%rdx)
	...
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 a0 0f 20 00 00    	add    %ah,0x200f(%rax)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 07                	add    %al,(%rdi)
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 03                	add    %al,(%rbx)
	...
 5fd:	00 00                	add    %al,(%rax)
 5ff:	00 a8 0f 20 00 00    	add    %ch,0x200f(%rax)
 605:	00 00                	add    %al,(%rax)
 607:	00 07                	add    %al,(%rdi)
 609:	00 00                	add    %al,(%rax)
 60b:	00 06                	add    %al,(%rsi)
	...
 615:	00 00                	add    %al,(%rax)
 617:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 07                	add    %al,(%rdi)
 621:	00 00                	add    %al,(%rax)
 623:	00 07                	add    %al,(%rdi)
	...
 62d:	00 00                	add    %al,(%rax)
 62f:	00 b8 0f 20 00 00    	add    %bh,0x200f(%rax)
 635:	00 00                	add    %al,(%rax)
 637:	00 07                	add    %al,(%rdi)
 639:	00 00                	add    %al,(%rax)
 63b:	00 08                	add    %cl,(%rax)
	...
 645:	00 00                	add    %al,(%rax)
 647:	00 c0                	add    %al,%al
 649:	0f 20 00             	mov    %cr0,%rax
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	07                   	(bad)  
 651:	00 00                	add    %al,(%rax)
 653:	00 0a                	add    %cl,(%rdx)
	...
 65d:	00 00                	add    %al,(%rax)
 65f:	00 c8                	add    %cl,%al
 661:	0f 20 00             	mov    %cr0,%rax
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	07                   	(bad)  
 669:	00 00                	add    %al,(%rax)
 66b:	00 0b                	add    %cl,(%rbx)
	...
 675:	00 00                	add    %al,(%rax)
 677:	00 d0                	add    %dl,%al
 679:	0f 20 00             	mov    %cr0,%rax
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	07                   	(bad)  
 681:	00 00                	add    %al,(%rax)
 683:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 689 <_init-0x7>
 689:	00 00                	add    %al,(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000000690 <_init>:
 690:	48 83 ec 08          	sub    $0x8,%rsp
 694:	48 8b 05 4d 09 20 00 	mov    0x20094d(%rip),%rax        # 200fe8 <__gmon_start__>
 69b:	48 85 c0             	test   %rax,%rax
 69e:	74 02                	je     6a2 <_init+0x12>
 6a0:	ff d0                	callq  *%rax
 6a2:	48 83 c4 08          	add    $0x8,%rsp
 6a6:	c3                   	retq   

Disassembly of section .plt:

00000000000006b0 <.plt>:
 6b0:	ff 35 d2 08 20 00    	pushq  0x2008d2(%rip)        # 200f88 <_GLOBAL_OFFSET_TABLE_+0x8>
 6b6:	ff 25 d4 08 20 00    	jmpq   *0x2008d4(%rip)        # 200f90 <_GLOBAL_OFFSET_TABLE_+0x10>
 6bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000006c0 <puts@plt>:
 6c0:	ff 25 d2 08 20 00    	jmpq   *0x2008d2(%rip)        # 200f98 <puts@GLIBC_2.2.5>
 6c6:	68 00 00 00 00       	pushq  $0x0
 6cb:	e9 e0 ff ff ff       	jmpq   6b0 <.plt>

00000000000006d0 <mmap@plt>:
 6d0:	ff 25 ca 08 20 00    	jmpq   *0x2008ca(%rip)        # 200fa0 <mmap@GLIBC_2.2.5>
 6d6:	68 01 00 00 00       	pushq  $0x1
 6db:	e9 d0 ff ff ff       	jmpq   6b0 <.plt>

00000000000006e0 <memcpy@plt>:
 6e0:	ff 25 c2 08 20 00    	jmpq   *0x2008c2(%rip)        # 200fa8 <memcpy@GLIBC_2.14>
 6e6:	68 02 00 00 00       	pushq  $0x2
 6eb:	e9 c0 ff ff ff       	jmpq   6b0 <.plt>

00000000000006f0 <munmap@plt>:
 6f0:	ff 25 ba 08 20 00    	jmpq   *0x2008ba(%rip)        # 200fb0 <munmap@GLIBC_2.2.5>
 6f6:	68 03 00 00 00       	pushq  $0x3
 6fb:	e9 b0 ff ff ff       	jmpq   6b0 <.plt>

0000000000000700 <perror@plt>:
 700:	ff 25 b2 08 20 00    	jmpq   *0x2008b2(%rip)        # 200fb8 <perror@GLIBC_2.2.5>
 706:	68 04 00 00 00       	pushq  $0x4
 70b:	e9 a0 ff ff ff       	jmpq   6b0 <.plt>

0000000000000710 <sleep@plt>:
 710:	ff 25 aa 08 20 00    	jmpq   *0x2008aa(%rip)        # 200fc0 <sleep@GLIBC_2.2.5>
 716:	68 05 00 00 00       	pushq  $0x5
 71b:	e9 90 ff ff ff       	jmpq   6b0 <.plt>

0000000000000720 <wait@plt>:
 720:	ff 25 a2 08 20 00    	jmpq   *0x2008a2(%rip)        # 200fc8 <wait@GLIBC_2.2.5>
 726:	68 06 00 00 00       	pushq  $0x6
 72b:	e9 80 ff ff ff       	jmpq   6b0 <.plt>

0000000000000730 <fork@plt>:
 730:	ff 25 9a 08 20 00    	jmpq   *0x20089a(%rip)        # 200fd0 <fork@GLIBC_2.2.5>
 736:	68 07 00 00 00       	pushq  $0x7
 73b:	e9 70 ff ff ff       	jmpq   6b0 <.plt>

Disassembly of section .plt.got:

0000000000000740 <__cxa_finalize@plt>:
 740:	ff 25 b2 08 20 00    	jmpq   *0x2008b2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 746:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000750 <_start>:
 750:	31 ed                	xor    %ebp,%ebp
 752:	49 89 d1             	mov    %rdx,%r9
 755:	5e                   	pop    %rsi
 756:	48 89 e2             	mov    %rsp,%rdx
 759:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 75d:	50                   	push   %rax
 75e:	54                   	push   %rsp
 75f:	4c 8d 05 2a 02 00 00 	lea    0x22a(%rip),%r8        # 990 <__libc_csu_fini>
 766:	48 8d 0d b3 01 00 00 	lea    0x1b3(%rip),%rcx        # 920 <__libc_csu_init>
 76d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 85a <main>
 774:	ff 15 66 08 20 00    	callq  *0x200866(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 77a:	f4                   	hlt    
 77b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000780 <deregister_tm_clones>:
 780:	48 8d 3d 89 08 20 00 	lea    0x200889(%rip),%rdi        # 201010 <__TMC_END__>
 787:	55                   	push   %rbp
 788:	48 8d 05 81 08 20 00 	lea    0x200881(%rip),%rax        # 201010 <__TMC_END__>
 78f:	48 39 f8             	cmp    %rdi,%rax
 792:	48 89 e5             	mov    %rsp,%rbp
 795:	74 19                	je     7b0 <deregister_tm_clones+0x30>
 797:	48 8b 05 3a 08 20 00 	mov    0x20083a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 79e:	48 85 c0             	test   %rax,%rax
 7a1:	74 0d                	je     7b0 <deregister_tm_clones+0x30>
 7a3:	5d                   	pop    %rbp
 7a4:	ff e0                	jmpq   *%rax
 7a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7ad:	00 00 00 
 7b0:	5d                   	pop    %rbp
 7b1:	c3                   	retq   
 7b2:	0f 1f 40 00          	nopl   0x0(%rax)
 7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7bd:	00 00 00 

00000000000007c0 <register_tm_clones>:
 7c0:	48 8d 3d 49 08 20 00 	lea    0x200849(%rip),%rdi        # 201010 <__TMC_END__>
 7c7:	48 8d 35 42 08 20 00 	lea    0x200842(%rip),%rsi        # 201010 <__TMC_END__>
 7ce:	55                   	push   %rbp
 7cf:	48 29 fe             	sub    %rdi,%rsi
 7d2:	48 89 e5             	mov    %rsp,%rbp
 7d5:	48 c1 fe 03          	sar    $0x3,%rsi
 7d9:	48 89 f0             	mov    %rsi,%rax
 7dc:	48 c1 e8 3f          	shr    $0x3f,%rax
 7e0:	48 01 c6             	add    %rax,%rsi
 7e3:	48 d1 fe             	sar    %rsi
 7e6:	74 18                	je     800 <register_tm_clones+0x40>
 7e8:	48 8b 05 01 08 20 00 	mov    0x200801(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 7ef:	48 85 c0             	test   %rax,%rax
 7f2:	74 0c                	je     800 <register_tm_clones+0x40>
 7f4:	5d                   	pop    %rbp
 7f5:	ff e0                	jmpq   *%rax
 7f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 7fe:	00 00 
 800:	5d                   	pop    %rbp
 801:	c3                   	retq   
 802:	0f 1f 40 00          	nopl   0x0(%rax)
 806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 80d:	00 00 00 

0000000000000810 <__do_global_dtors_aux>:
 810:	80 3d f9 07 20 00 00 	cmpb   $0x0,0x2007f9(%rip)        # 201010 <__TMC_END__>
 817:	75 2f                	jne    848 <__do_global_dtors_aux+0x38>
 819:	48 83 3d d7 07 20 00 	cmpq   $0x0,0x2007d7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 820:	00 
 821:	55                   	push   %rbp
 822:	48 89 e5             	mov    %rsp,%rbp
 825:	74 0c                	je     833 <__do_global_dtors_aux+0x23>
 827:	48 8b 3d da 07 20 00 	mov    0x2007da(%rip),%rdi        # 201008 <__dso_handle>
 82e:	e8 0d ff ff ff       	callq  740 <__cxa_finalize@plt>
 833:	e8 48 ff ff ff       	callq  780 <deregister_tm_clones>
 838:	c6 05 d1 07 20 00 01 	movb   $0x1,0x2007d1(%rip)        # 201010 <__TMC_END__>
 83f:	5d                   	pop    %rbp
 840:	c3                   	retq   
 841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 848:	f3 c3                	repz retq 
 84a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000850 <frame_dummy>:
 850:	55                   	push   %rbp
 851:	48 89 e5             	mov    %rsp,%rbp
 854:	5d                   	pop    %rbp
 855:	e9 66 ff ff ff       	jmpq   7c0 <register_tm_clones>

000000000000085a <main>:
 85a:	55                   	push   %rbp
 85b:	48 89 e5             	mov    %rsp,%rbp
 85e:	48 83 ec 10          	sub    $0x10,%rsp
 862:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 869:	00 
 86a:	41 b9 00 00 00 00    	mov    $0x0,%r9d
 870:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
 876:	b9 21 00 00 00       	mov    $0x21,%ecx
 87b:	ba 03 00 00 00       	mov    $0x3,%edx
 880:	be 00 04 00 00       	mov    $0x400,%esi
 885:	bf 00 00 00 00       	mov    $0x0,%edi
 88a:	e8 41 fe ff ff       	callq  6d0 <mmap@plt>
 88f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 893:	48 83 7d f8 ff       	cmpq   $0xffffffffffffffff,-0x8(%rbp)
 898:	75 13                	jne    8ad <main+0x53>
 89a:	48 8d 3d 03 01 00 00 	lea    0x103(%rip),%rdi        # 9a4 <_IO_stdin_used+0x4>
 8a1:	e8 5a fe ff ff       	callq  700 <perror@plt>
 8a6:	b8 01 00 00 00       	mov    $0x1,%eax
 8ab:	eb 6a                	jmp    917 <main+0xbd>
 8ad:	48 8d 3d f6 00 00 00 	lea    0xf6(%rip),%rdi        # 9aa <_IO_stdin_used+0xa>
 8b4:	e8 07 fe ff ff       	callq  6c0 <puts@plt>
 8b9:	e8 72 fe ff ff       	callq  730 <fork@plt>
 8be:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8c1:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
 8c5:	75 24                	jne    8eb <main+0x91>
 8c7:	bf 0a 00 00 00       	mov    $0xa,%edi
 8cc:	e8 3f fe ff ff       	callq  710 <sleep@plt>
 8d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8d5:	ba 0a 00 00 00       	mov    $0xa,%edx
 8da:	48 8d 35 dc 00 00 00 	lea    0xdc(%rip),%rsi        # 9bd <_IO_stdin_used+0x1d>
 8e1:	48 89 c7             	mov    %rax,%rdi
 8e4:	e8 f7 fd ff ff       	callq  6e0 <memcpy@plt>
 8e9:	eb 16                	jmp    901 <main+0xa7>
 8eb:	bf 00 00 00 00       	mov    $0x0,%edi
 8f0:	e8 2b fe ff ff       	callq  720 <wait@plt>
 8f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8f9:	48 89 c7             	mov    %rax,%rdi
 8fc:	e8 bf fd ff ff       	callq  6c0 <puts@plt>
 901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 905:	be 00 04 00 00       	mov    $0x400,%esi
 90a:	48 89 c7             	mov    %rax,%rdi
 90d:	e8 de fd ff ff       	callq  6f0 <munmap@plt>
 912:	b8 00 00 00 00       	mov    $0x0,%eax
 917:	c9                   	leaveq 
 918:	c3                   	retq   
 919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000920 <__libc_csu_init>:
 920:	41 57                	push   %r15
 922:	41 56                	push   %r14
 924:	49 89 d7             	mov    %rdx,%r15
 927:	41 55                	push   %r13
 929:	41 54                	push   %r12
 92b:	4c 8d 25 4e 04 20 00 	lea    0x20044e(%rip),%r12        # 200d80 <__frame_dummy_init_array_entry>
 932:	55                   	push   %rbp
 933:	48 8d 2d 4e 04 20 00 	lea    0x20044e(%rip),%rbp        # 200d88 <__init_array_end>
 93a:	53                   	push   %rbx
 93b:	41 89 fd             	mov    %edi,%r13d
 93e:	49 89 f6             	mov    %rsi,%r14
 941:	4c 29 e5             	sub    %r12,%rbp
 944:	48 83 ec 08          	sub    $0x8,%rsp
 948:	48 c1 fd 03          	sar    $0x3,%rbp
 94c:	e8 3f fd ff ff       	callq  690 <_init>
 951:	48 85 ed             	test   %rbp,%rbp
 954:	74 20                	je     976 <__libc_csu_init+0x56>
 956:	31 db                	xor    %ebx,%ebx
 958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 95f:	00 
 960:	4c 89 fa             	mov    %r15,%rdx
 963:	4c 89 f6             	mov    %r14,%rsi
 966:	44 89 ef             	mov    %r13d,%edi
 969:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 96d:	48 83 c3 01          	add    $0x1,%rbx
 971:	48 39 dd             	cmp    %rbx,%rbp
 974:	75 ea                	jne    960 <__libc_csu_init+0x40>
 976:	48 83 c4 08          	add    $0x8,%rsp
 97a:	5b                   	pop    %rbx
 97b:	5d                   	pop    %rbp
 97c:	41 5c                	pop    %r12
 97e:	41 5d                	pop    %r13
 980:	41 5e                	pop    %r14
 982:	41 5f                	pop    %r15
 984:	c3                   	retq   
 985:	90                   	nop
 986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 98d:	00 00 00 

0000000000000990 <__libc_csu_fini>:
 990:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000994 <_fini>:
 994:	48 83 ec 08          	sub    $0x8,%rsp
 998:	48 83 c4 08          	add    $0x8,%rsp
 99c:	c3                   	retq   

Disassembly of section .rodata:

00000000000009a0 <_IO_stdin_used>:
 9a0:	01 00                	add    %eax,(%rax)
 9a2:	02 00                	add    (%rax),%al
 9a4:	6d                   	insl   (%dx),%es:(%rdi)
 9a5:	6d                   	insl   (%dx),%es:(%rdi)
 9a6:	61                   	(bad)  
 9a7:	70 3a                	jo     9e3 <__GNU_EH_FRAME_HDR+0x1b>
 9a9:	00 6d 61             	add    %ch,0x61(%rbp)
 9ac:	70 70                	jo     a1e <__GNU_EH_FRAME_HDR+0x56>
 9ae:	69 6e 67 20 73 75 63 	imul   $0x63757320,0x67(%rsi),%ebp
 9b5:	63 65 73             	movslq 0x73(%rbp),%esp
 9b8:	73 2e                	jae    9e8 <__GNU_EH_FRAME_HDR+0x20>
 9ba:	2e 2e 00 31          	cs add %dh,%cs:(%rcx)
 9be:	32 33                	xor    (%rbx),%dh
 9c0:	34 35                	xor    $0x35,%al
 9c2:	36 37                	ss (bad) 
 9c4:	38 39                	cmp    %bh,(%rcx)
 9c6:	30 00                	xor    %al,(%rax)

Disassembly of section .eh_frame_hdr:

00000000000009c8 <__GNU_EH_FRAME_HDR>:
 9c8:	01 1b                	add    %ebx,(%rbx)
 9ca:	03 3b                	add    (%rbx),%edi
 9cc:	3c 00                	cmp    $0x0,%al
 9ce:	00 00                	add    %al,(%rax)
 9d0:	06                   	(bad)  
 9d1:	00 00                	add    %al,(%rax)
 9d3:	00 e8                	add    %ch,%al
 9d5:	fc                   	cld    
 9d6:	ff                   	(bad)  
 9d7:	ff 88 00 00 00 78    	decl   0x78000000(%rax)
 9dd:	fd                   	std    
 9de:	ff                   	(bad)  
 9df:	ff b0 00 00 00 88    	pushq  -0x78000000(%rax)
 9e5:	fd                   	std    
 9e6:	ff                   	(bad)  
 9e7:	ff 58 00             	lcall  *0x0(%rax)
 9ea:	00 00                	add    %al,(%rax)
 9ec:	92                   	xchg   %eax,%edx
 9ed:	fe                   	(bad)  
 9ee:	ff                   	(bad)  
 9ef:	ff c8                	dec    %eax
 9f1:	00 00                	add    %al,(%rax)
 9f3:	00 58 ff             	add    %bl,-0x1(%rax)
 9f6:	ff                   	(bad)  
 9f7:	ff                   	(bad)  
 9f8:	e8 00 00 00 c8       	callq  ffffffffc80009fd <_end+0xffffffffc7dff9e5>
 9fd:	ff                   	(bad)  
 9fe:	ff                   	(bad)  
 9ff:	ff 30                	pushq  (%rax)
 a01:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000a08 <__FRAME_END__-0x104>:
 a08:	14 00                	adc    $0x0,%al
 a0a:	00 00                	add    %al,(%rax)
 a0c:	00 00                	add    %al,(%rax)
 a0e:	00 00                	add    %al,(%rax)
 a10:	01 7a 52             	add    %edi,0x52(%rdx)
 a13:	00 01                	add    %al,(%rcx)
 a15:	78 10                	js     a27 <__GNU_EH_FRAME_HDR+0x5f>
 a17:	01 1b                	add    %ebx,(%rbx)
 a19:	0c 07                	or     $0x7,%al
 a1b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 a21:	00 00                	add    %al,(%rax)
 a23:	00 1c 00             	add    %bl,(%rax,%rax,1)
 a26:	00 00                	add    %al,(%rax)
 a28:	28 fd                	sub    %bh,%ch
 a2a:	ff                   	(bad)  
 a2b:	ff 2b                	ljmp   *(%rbx)
	...
 a35:	00 00                	add    %al,(%rax)
 a37:	00 14 00             	add    %dl,(%rax,%rax,1)
 a3a:	00 00                	add    %al,(%rax)
 a3c:	00 00                	add    %al,(%rax)
 a3e:	00 00                	add    %al,(%rax)
 a40:	01 7a 52             	add    %edi,0x52(%rdx)
 a43:	00 01                	add    %al,(%rcx)
 a45:	78 10                	js     a57 <__GNU_EH_FRAME_HDR+0x8f>
 a47:	01 1b                	add    %ebx,(%rbx)
 a49:	0c 07                	or     $0x7,%al
 a4b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 a51:	00 00                	add    %al,(%rax)
 a53:	00 1c 00             	add    %bl,(%rax,%rax,1)
 a56:	00 00                	add    %al,(%rax)
 a58:	58                   	pop    %rax
 a59:	fc                   	cld    
 a5a:	ff                   	(bad)  
 a5b:	ff 90 00 00 00 00    	callq  *0x0(%rax)
 a61:	0e                   	(bad)  
 a62:	10 46 0e             	adc    %al,0xe(%rsi)
 a65:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 a68:	0b 77 08             	or     0x8(%rdi),%esi
 a6b:	80 00 3f             	addb   $0x3f,(%rax)
 a6e:	1a 3b                	sbb    (%rbx),%bh
 a70:	2a 33                	sub    (%rbx),%dh
 a72:	24 22                	and    $0x22,%al
 a74:	00 00                	add    %al,(%rax)
 a76:	00 00                	add    %al,(%rax)
 a78:	14 00                	adc    $0x0,%al
 a7a:	00 00                	add    %al,(%rax)
 a7c:	44 00 00             	add    %r8b,(%rax)
 a7f:	00 c0                	add    %al,%al
 a81:	fc                   	cld    
 a82:	ff                   	(bad)  
 a83:	ff 08                	decl   (%rax)
	...
 a8d:	00 00                	add    %al,(%rax)
 a8f:	00 1c 00             	add    %bl,(%rax,%rax,1)
 a92:	00 00                	add    %al,(%rax)
 a94:	5c                   	pop    %rsp
 a95:	00 00                	add    %al,(%rax)
 a97:	00 c2                	add    %al,%dl
 a99:	fd                   	std    
 a9a:	ff                   	(bad)  
 a9b:	ff                   	(bad)  
 a9c:	bf 00 00 00 00       	mov    $0x0,%edi
 aa1:	41 0e                	rex.B (bad) 
 aa3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 aa9:	02 ba 0c 07 08 00    	add    0x8070c(%rdx),%bh
 aaf:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 ab3:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 ab7:	00 68 fe             	add    %ch,-0x2(%rax)
 aba:	ff                   	(bad)  
 abb:	ff 65 00             	jmpq   *0x0(%rbp)
 abe:	00 00                	add    %al,(%rax)
 ac0:	00 42 0e             	add    %al,0xe(%rdx)
 ac3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 ac9:	8e 03                	mov    (%rbx),%es
 acb:	45 0e                	rex.RB (bad) 
 acd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 ad3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301921 <_end+0xffffffff86100909>
 ad9:	06                   	(bad)  
 ada:	48 0e                	rex.W (bad) 
 adc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 ae2:	72 0e                	jb     af2 <__GNU_EH_FRAME_HDR+0x12a>
 ae4:	38 41 0e             	cmp    %al,0xe(%rcx)
 ae7:	30 41 0e             	xor    %al,0xe(%rcx)
 aea:	28 42 0e             	sub    %al,0xe(%rdx)
 aed:	20 42 0e             	and    %al,0xe(%rdx)
 af0:	18 42 0e             	sbb    %al,0xe(%rdx)
 af3:	10 42 0e             	adc    %al,0xe(%rdx)
 af6:	08 00                	or     %al,(%rax)
 af8:	10 00                	adc    %al,(%rax)
 afa:	00 00                	add    %al,(%rax)
 afc:	c4                   	(bad)  
 afd:	00 00                	add    %al,(%rax)
 aff:	00 90 fe ff ff 02    	add    %dl,0x2fffffe(%rax)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 00                	add    %al,(%rax)
 b09:	00 00                	add    %al,(%rax)
	...

0000000000000b0c <__FRAME_END__>:
 b0c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200d80 <__frame_dummy_init_array_entry>:
  200d80:	50                   	push   %rax
  200d81:	08 00                	or     %al,(%rax)
  200d83:	00 00                	add    %al,(%rax)
  200d85:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200d88 <__do_global_dtors_aux_fini_array_entry>:
  200d88:	10 08                	adc    %cl,(%rax)
  200d8a:	00 00                	add    %al,(%rax)
  200d8c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200d90 <_DYNAMIC>:
  200d90:	01 00                	add    %eax,(%rax)
  200d92:	00 00                	add    %al,(%rax)
  200d94:	00 00                	add    %al,(%rax)
  200d96:	00 00                	add    %al,(%rax)
  200d98:	01 00                	add    %eax,(%rax)
  200d9a:	00 00                	add    %al,(%rax)
  200d9c:	00 00                	add    %al,(%rax)
  200d9e:	00 00                	add    %al,(%rax)
  200da0:	0c 00                	or     $0x0,%al
  200da2:	00 00                	add    %al,(%rax)
  200da4:	00 00                	add    %al,(%rax)
  200da6:	00 00                	add    %al,(%rax)
  200da8:	90                   	nop
  200da9:	06                   	(bad)  
  200daa:	00 00                	add    %al,(%rax)
  200dac:	00 00                	add    %al,(%rax)
  200dae:	00 00                	add    %al,(%rax)
  200db0:	0d 00 00 00 00       	or     $0x0,%eax
  200db5:	00 00                	add    %al,(%rax)
  200db7:	00 94 09 00 00 00 00 	add    %dl,0x0(%rcx,%rcx,1)
  200dbe:	00 00                	add    %al,(%rax)
  200dc0:	19 00                	sbb    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	80 0d 20 00 00 00 00 	orb    $0x0,0x20(%rip)        # 200def <_DYNAMIC+0x5f>
  200dcf:	00 1b                	add    %bl,(%rbx)
  200dd1:	00 00                	add    %al,(%rax)
  200dd3:	00 00                	add    %al,(%rax)
  200dd5:	00 00                	add    %al,(%rax)
  200dd7:	00 08                	add    %cl,(%rax)
  200dd9:	00 00                	add    %al,(%rax)
  200ddb:	00 00                	add    %al,(%rax)
  200ddd:	00 00                	add    %al,(%rax)
  200ddf:	00 1a                	add    %bl,(%rdx)
  200de1:	00 00                	add    %al,(%rax)
  200de3:	00 00                	add    %al,(%rax)
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 88 0d 20 00 00    	add    %cl,0x200d(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200df2:	00 00                	add    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	08 00                	or     %al,(%rax)
  200dfa:	00 00                	add    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
  200dfe:	00 00                	add    %al,(%rax)
  200e00:	f5                   	cmc    
  200e01:	fe                   	(bad)  
  200e02:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e15 <_DYNAMIC+0x85>
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 08                	add    %cl,(%rax)
  200e19:	04 00                	add    $0x0,%al
  200e1b:	00 00                	add    %al,(%rax)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 06                	add    %al,(%rsi)
  200e21:	00 00                	add    %al,(%rax)
  200e23:	00 00                	add    %al,(%rax)
  200e25:	00 00                	add    %al,(%rax)
  200e27:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e2d:	00 00                	add    %al,(%rax)
  200e2f:	00 0a                	add    %cl,(%rdx)
  200e31:	00 00                	add    %al,(%rax)
  200e33:	00 00                	add    %al,(%rax)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 b7 00 00 00 00    	add    %dh,0x0(%rdi)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 0b                	add    %cl,(%rbx)
  200e41:	00 00                	add    %al,(%rax)
  200e43:	00 00                	add    %al,(%rax)
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 18                	add    %bl,(%rax)
  200e49:	00 00                	add    %al,(%rax)
  200e4b:	00 00                	add    %al,(%rax)
  200e4d:	00 00                	add    %al,(%rax)
  200e4f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e55 <_DYNAMIC+0xc5>
	...
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 03                	add    %al,(%rbx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 80 0f 20 00 00    	add    %al,0x200f(%rax)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 02                	add    %al,(%rdx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 c0                	add    %al,%al
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 14 00             	add    %dl,(%rax,%rax,1)
  200e82:	00 00                	add    %al,(%rax)
  200e84:	00 00                	add    %al,(%rax)
  200e86:	00 00                	add    %al,(%rax)
  200e88:	07                   	(bad)  
  200e89:	00 00                	add    %al,(%rax)
  200e8b:	00 00                	add    %al,(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 17                	add    %dl,(%rdi)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 d0                	add    %dl,%al
  200e99:	05 00 00 00 00       	add    $0x0,%eax
  200e9e:	00 00                	add    %al,(%rax)
  200ea0:	07                   	(bad)  
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 10                	add    %dl,(%rax)
  200ea9:	05 00 00 00 00       	add    $0x0,%eax
  200eae:	00 00                	add    %al,(%rax)
  200eb0:	08 00                	or     %al,(%rax)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	c0 00 00             	rolb   $0x0,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 09                	add    %cl,(%rcx)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 18                	add    %bl,(%rax)
  200ec9:	00 00                	add    %al,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 1e                	add    %bl,(%rsi)
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 08                	add    %cl,(%rax)
  200ed9:	00 00                	add    %al,(%rax)
  200edb:	00 00                	add    %al,(%rax)
  200edd:	00 00                	add    %al,(%rax)
  200edf:	00 fb                	add    %bh,%bl
  200ee1:	ff                   	(bad)  
  200ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 01                	add    %al,(%rcx)
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	08 00                	or     %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 fe                	add    %bh,%dh
  200ef1:	ff                   	(bad)  
  200ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 e0                	add    %ah,%al
  200ef9:	04 00                	add    $0x0,%al
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 ff                	add    %bh,%bh
  200f01:	ff                   	(bad)  
  200f02:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 01                	add    %al,(%rcx)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 f0                	add    %dh,%al
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 c0                	add    %al,%al
  200f19:	04 00                	add    $0x0,%al
  200f1b:	00 00                	add    %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 f9                	add    %bh,%cl
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200f80 <_GLOBAL_OFFSET_TABLE_>:
  200f80:	90                   	nop
  200f81:	0d 20 00 00 00       	or     $0x20,%eax
	...
  200f96:	00 00                	add    %al,(%rax)
  200f98:	c6 06 00             	movb   $0x0,(%rsi)
  200f9b:	00 00                	add    %al,(%rax)
  200f9d:	00 00                	add    %al,(%rax)
  200f9f:	00 d6                	add    %dl,%dh
  200fa1:	06                   	(bad)  
  200fa2:	00 00                	add    %al,(%rax)
  200fa4:	00 00                	add    %al,(%rax)
  200fa6:	00 00                	add    %al,(%rax)
  200fa8:	e6 06                	out    %al,$0x6
  200faa:	00 00                	add    %al,(%rax)
  200fac:	00 00                	add    %al,(%rax)
  200fae:	00 00                	add    %al,(%rax)
  200fb0:	f6 06 00             	testb  $0x0,(%rsi)
  200fb3:	00 00                	add    %al,(%rax)
  200fb5:	00 00                	add    %al,(%rax)
  200fb7:	00 06                	add    %al,(%rsi)
  200fb9:	07                   	(bad)  
  200fba:	00 00                	add    %al,(%rax)
  200fbc:	00 00                	add    %al,(%rax)
  200fbe:	00 00                	add    %al,(%rax)
  200fc0:	16                   	(bad)  
  200fc1:	07                   	(bad)  
  200fc2:	00 00                	add    %al,(%rax)
  200fc4:	00 00                	add    %al,(%rax)
  200fc6:	00 00                	add    %al,(%rax)
  200fc8:	26 07                	es (bad) 
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	36 07                	ss (bad) 
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x618>
   a:	74 75                	je     81 <_init-0x60f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 35 2e 30 2d 33    	cs xor $0x332d302e,%eax
  14:	75 62                	jne    78 <_init-0x618>
  16:	75 6e                	jne    86 <_init-0x60a>
  18:	74 75                	je     8f <_init-0x601>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  22:	20 37                	and    %dh,(%rdi)
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    %al,%cs:(%rax)
